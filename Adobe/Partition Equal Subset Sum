// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
// User function Template for C++

class Solution{
public:
   /* int solve(int n,int arr[],int Tsum,int sum,vector<vector<int>> &dp)
    {
        if(n==0){
          if(sum==Tsum)
          {
              return 1;
          }
          else
          {
              return 0;
          }
          if(dp[n][sum]!=-1)
          {
              return dp[n][sum];
          }
        }
        a=solve(n-1,arr,Tsum,sum+arr[n-1],dp);
         b=solve(n-1,arr,Tsum,sum,dp);
        
    }*/

    int equalPartition(int N, int arr[])
    {
        int Total_sum=0;
        for(int i=0;i<N;i++)
            Total_sum+=arr[i];
            if(Total_sum%2!=0)
            return 0;
        int sum=Total_sum/2;
      // vector<vector<int>> dp(N+1, vector<int>(Total_sum+1, -1));
        int dp[N+1][Total_sum];
        for(int i=0;i<=N;i++)
        dp[i][0]=1;
        for(int j=1;j<=Total_sum;j++)
        {
            dp[0][j]=0;
        }
        for(int i=1;i<N+1;i++)
        {
            for(int j=1;j<Total_sum+1;j++)
            {
                if(arr[i-1]<=j)
                {
                    dp[i][j]=dp[i-1][j]+dp[i-1][j-arr[i-1]];
                }
                else
                dp[i][j]=dp[i-1][j];
            }
        }
        
      
       return dp[N][sum];
        
    }
};

// { Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int N;
        cin>>N;
        int arr[N];
        for(int i = 0;i < N;i++)
            cin>>arr[i];
        
        Solution ob;
        if(ob.equalPartition(N, arr))
            cout<<"YES\n";
        else
            cout<<"NO\n";
    }
    return 0;
}  // } Driver Code Ends
