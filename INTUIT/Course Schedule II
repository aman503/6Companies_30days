class Solution {
public:
     bool vis[2001];
    bool dfsvis[2001];
    bool flag=true;
      vector<int>adj[2001];
    void dfs(int a,stack<int>&st)
    {
        vis[a]=true;
        dfsvis[a]=true;
        for(auto it:adj[a])
        {
            if(!vis[it])
            {
                dfs(it,st);
            }
            else if(dfsvis[it])
            {
                flag=false;
                return;
            }
        }
        st.push(a);
        dfsvis[a]=false;
        
    }
    
    
    

    vector<int> findOrder(int n, vector<vector<int>>& pre) {
        
        vector<int>ans;
         stack<int>st;
        for(int i=0;i<pre.size();i++)
        {
            adj[pre[i][0]].push_back(pre[i][1]);
            
        }
        
        for(int i=0;i<n;i++)
        {
            if(!vis[i])
            {
                dfs(i,st);
            }
        }
        if(flag==false || st.empty())
        {
            return ans;
        }
        while(!st.empty())
        {
            ans.push_back(st.top());
            st.pop();
        }
        reverse(ans.begin(),ans.end());
        return ans;
        
    }
};
