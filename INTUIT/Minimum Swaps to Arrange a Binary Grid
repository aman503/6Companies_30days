class Solution {
public:
    int minSwaps(vector<vector<int>>& grid) {
       
        int n=grid.size();
        int m=grid[0].size();
        vector<int> vect;
        for(int i=0;i<n;i++){
            int count=0;
            for(int j=m-1;j>=0;j--){
                if(grid[i][j]==0){
                    count++;
                }
                else{
                    vect.push_back(count);
                    break;
                }
            }
        }
        int ans=0;
        n=vect.size();
        for (int i=0; i<n; i++) {
         
            if (vect[i] < (n-i-1)) {
                int k=i;
                while (k < n && vect[k] < (n-i-1)) {
                    k++;
                }
			
                if (k == n) {     
                    return -1;  
                }
                while (k>i) {
                    swap(vect[k], vect[k-1]);
                    ans++;
                    k--;
                }
            }
        }
        return ans;
    }
};
